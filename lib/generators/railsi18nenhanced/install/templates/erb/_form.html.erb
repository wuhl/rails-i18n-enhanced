<%-
  require 'yaml'
  translation_file = "doc/translation.yml"
  translation = Array.new
  one = singular_table_name
  other = plural_table_name
  if File.exist? translation_file
    translation = YAML::load(File.read(translation_file))
    if translation['de']
      if translation['de'][singular_table_name]
        one = ( translation['de'][singular_table_name]['one'] ? translation['de'][singular_table_name]['one'] : singular_table_name )
        other = ( translation['de'][singular_table_name]['other'] ? translation['de'][singular_table_name]['other'] : plural_table_name )
      end
    end
  end

  if File.exist? "app/views/layouts/_menu.html.erb"
    # if File.read("app/views/layouts/_menu.html.erb").include?("        <ul class=\"dropdown-menu\">\n        </ul>\n")
    if File.read("app/views/layouts/_menu.html.erb").include?(
        "        <ul class=\"dropdown-menu\">\n" +
        "        </ul>\n" +
        "      </li>\n")
      insert_into_file "app/views/layouts/_menu.html.erb", :before =>
        "        </ul>\n" +
        "      </li>\n" do
        "          <li><a class=\"nav-link\" href=<%= #{plural_table_name}_path %\>><%= t('helpers.titles.index', model: #{class_name}.model_name.human(:count=>2)) %\><span class=\"sr-only\">(current)</span></a></li>\n" +
        "          <li><a class=\"nav-link\" href=<%= new_#{singular_table_name}_path %\>><%= t('helpers.titles.new', model: #{class_name}.model_name.human) %\><span class=\"sr-only\">(current)</span></a></li>\n"
      end
    else
      insert_into_file "app/views/layouts/_menu.html.erb", :before =>
        "        </ul>\n" +
        "      </li>\n" do
        "          <li role=\"separator\" class=\"divider\"></li>\n" +
        "          <li><a class=\"nav-link\" href=<%= #{plural_table_name}_path %\>><%= t('helpers.titles.index', model: #{class_name}.model_name.human(:count=>2)) %\><span class=\"sr-only\">(current)</span></a></li>\n" +
        "          <li><a class=\"nav-link\" href=<%= new_#{singular_table_name}_path %\>><%= t('helpers.titles.new', model: #{class_name}.model_name.human) %\><span class=\"sr-only\">(current)</span></a></li>\n"
      end
    end
  end

  create_file "config/locales/de/de.model.#{singular_table_name}.yml",
    "# de.model.#{singular_table_name}.yml\n"+
    "de:\n" +
    "  activerecord:\n" +
    "    models:\n" +
    "      #{singular_table_name}:\n" +
    "        one: \"#{one}\"\n" +
    "        other: \"#{other}\"\n" +
    "    attributes:\n" +
    "      #{singular_table_name}:\n"
  gsub_file "config/routes.rb", "# For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html\nend", "# For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html\n  root '#{plural_table_name}#index'\nend"
-%>
<%%= form_for(@<%= singular_table_name %>) do |f| %>
  <%% if @<%= singular_table_name %>.errors.any? %>
    <div id="error_explanation">
      <h2><%%= pluralize(@<%= singular_table_name %>.errors.count, "error") %> prohibited this <%= singular_table_name %> from being saved:</h2>
      <ul>
        <%% @<%= singular_table_name %>.errors.full_messages.each do |msg| %>
          <li><%%= msg %></li>
        <%% end %>
      </ul>
    </div>
  <%% end %>
  <div class="form-inputs">
    <%- attributes.each do |attribute| -%>
    <%- if attribute.password_digest? -%>
    <%%= f.label :password %>
    <%%= f.password_field :password %>
    <%%= f.label :password_confirmation %>
    <%%= f.password_field :password_confirmation %>
    <%- elsif attribute.reference? -%>
    <%%= f.label :<%= attribute.singular_name %> %>
    <%%= f.collection_select :<%= attribute.column_name %>, <%= attribute.singular_name.camelize %>.all, :id, :foreignkey_value, prompt: true %>
    <%-
      t = "../template/foreignkey_#{attribute.singular_name}.rb"
      if File.exist? t
        s = File.read(t)
      else
        s = "  def foreignkey_value\n" +
            "    return \"Please adjust file app/models/#{attribute.singular_name}.rb\"\n" +
            "  end\n"
      end
      f = "app/models/#{attribute.singular_name}.rb"
      if File.exist? f
        if ! File.foreach(f).grep(/foreignkey_value/).any?
          insert_into_file f, :before => "\nend" do
            "\n\n#{s}"
          end
        end
      end
    -%>
    <%- elsif attribute.type.in?([:decimal]) && attribute.attr_options && attribute.attr_options[:scale] -%>
    <%%= f.label :<%= attribute.name %> %>
    <%%= f.number_field :<%= attribute.name %>, step: <%= 1.to_f / 10 ** attribute.attr_options[:scale] %> %>
    <%- else -%>
    <%%= f.label :<%= attribute.name %> %>
    <%%= f.<%= attribute.field_type %> :<%= attribute.name %> %>
    <%- end -%>
    <%-
      value = attribute.name
      if !translation.empty?
        if translation['de']
          if translation['de'][attribute.name]
            if translation['de'][attribute.name]['one']
              value = translation['de'][attribute.name]['one']
            else
              value = translation['de'][attribute.name]
            end
          end
        end
      end
      # append_to_file "config/locales/de/de.model.#{singular_table_name}.yml", "        #{attribute.name}: \"#{value}\"\n"
      path = "config/locales/de/de.model.#{singular_table_name}.yml"
      content = File.read(path, encoding: 'utf-8')
      content = content + "        #{attribute.name}: \"#{value}\"\n"
      File.open(path, 'wb') { |file| file.write(content) }
    -%>
    <%- end -%>
  </div>
  <div class="form-actions">
    <%%= f.submit %>
  </div>
<%% end %>
